# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "rig-core"
version = "0.12.0"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "An opinionated library for building LLM powered applications."
readme = "README.md"
license = "MIT"
repository = "https://github.com/0xPlaygrounds/rig"

[features]
all = [
    "derive",
    "pdf",
    "rayon",
]
audio = []
default = ["reqwest/default"]
derive = ["dep:rig-derive"]
epub = [
    "dep:epub",
    "dep:quick-xml",
]
image = []
mcp = ["dep:mcp-core"]
pdf = ["dep:lopdf"]
rayon = ["dep:rayon"]
reqwest-rustls = [
    "reqwest/rustls-tls",
    "reqwest/charset",
    "reqwest/http2",
    "reqwest/macos-system-configuration",
]
socks = ["reqwest/socks"]
worker = ["dep:worker"]

[lib]
name = "rig"
path = "src/lib.rs"
doctest = false

[[example]]
name = "agent"
path = "examples/agent.rs"

[[example]]
name = "agent_autonomous"
path = "examples/agent_autonomous.rs"

[[example]]
name = "agent_evaluator_optimizer"
path = "examples/agent_evaluator_optimizer.rs"

[[example]]
name = "agent_orchestrator"
path = "examples/agent_orchestrator.rs"

[[example]]
name = "agent_parallelization"
path = "examples/agent_parallelization.rs"

[[example]]
name = "agent_prompt_chaining"
path = "examples/agent_prompt_chaining.rs"

[[example]]
name = "agent_routing"
path = "examples/agent_routing.rs"

[[example]]
name = "agent_with_cohere"
path = "examples/agent_with_cohere.rs"

[[example]]
name = "agent_with_context"
path = "examples/agent_with_context.rs"

[[example]]
name = "agent_with_deepseek"
path = "examples/agent_with_deepseek.rs"

[[example]]
name = "agent_with_echochambers"
path = "examples/agent_with_echochambers.rs"

[[example]]
name = "agent_with_galadriel"
path = "examples/agent_with_galadriel.rs"

[[example]]
name = "agent_with_grok"
path = "examples/agent_with_grok.rs"

[[example]]
name = "agent_with_groq"
path = "examples/agent_with_groq.rs"

[[example]]
name = "agent_with_huggingface"
path = "examples/agent_with_huggingface.rs"

[[example]]
name = "agent_with_hyperbolic"
path = "examples/agent_with_hyperbolic.rs"

[[example]]
name = "agent_with_loaders"
path = "examples/agent_with_loaders.rs"

[[example]]
name = "agent_with_mira"
path = "examples/agent_with_mira.rs"

[[example]]
name = "agent_with_moonshot"
path = "examples/agent_with_moonshot.rs"
required-features = ["derive"]

[[example]]
name = "agent_with_ollama"
path = "examples/agent_with_ollama.rs"

[[example]]
name = "agent_with_openrouter"
path = "examples/agent_with_openrouter.rs"

[[example]]
name = "agent_with_together"
path = "examples/agent_with_together.rs"
required-features = ["derive"]

[[example]]
name = "agent_with_tools"
path = "examples/agent_with_tools.rs"

[[example]]
name = "anthropic_agent"
path = "examples/anthropic_agent.rs"

[[example]]
name = "anthropic_streaming"
path = "examples/anthropic_streaming.rs"

[[example]]
name = "anthropic_streaming_with_tools"
path = "examples/anthropic_streaming_with_tools.rs"

[[example]]
name = "calculator_chatbot"
path = "examples/calculator_chatbot.rs"

[[example]]
name = "chain"
path = "examples/chain.rs"

[[example]]
name = "cohere_streaming"
path = "examples/cohere_streaming.rs"

[[example]]
name = "cohere_streaming_with_tools"
path = "examples/cohere_streaming_with_tools.rs"

[[example]]
name = "debate"
path = "examples/debate.rs"

[[example]]
name = "extractor"
path = "examples/extractor.rs"

[[example]]
name = "extractor_with_deepseek"
path = "examples/extractor_with_deepseek.rs"

[[example]]
name = "gemini_agent"
path = "examples/gemini_agent.rs"

[[example]]
name = "gemini_embeddings"
path = "examples/gemini_embeddings.rs"
required-features = ["derive"]

[[example]]
name = "gemini_extractor"
path = "examples/gemini_extractor.rs"

[[example]]
name = "gemini_streaming"
path = "examples/gemini_streaming.rs"

[[example]]
name = "gemini_streaming_with_tools"
path = "examples/gemini_streaming_with_tools.rs"

[[example]]
name = "huggingface_image_generation"
path = "examples/huggingface_image_generation.rs"

[[example]]
name = "huggingface_streaming"
path = "examples/huggingface_streaming.rs"

[[example]]
name = "huggingface_subproviders"
path = "examples/huggingface_subproviders.rs"

[[example]]
name = "hyperbolic_audio_generation"
path = "examples/hyperbolic_audio_generation.rs"
required-features = ["audio"]

[[example]]
name = "hyperbolic_image_generation"
path = "examples/hyperbolic_image_generation.rs"

[[example]]
name = "image"
path = "examples/image.rs"

[[example]]
name = "image_ollama"
path = "examples/image_ollama.rs"

[[example]]
name = "loaders"
path = "examples/loaders.rs"

[[example]]
name = "mcp_tool"
path = "examples/mcp_tool.rs"
required-features = ["mcp"]

[[example]]
name = "multi_agent"
path = "examples/multi_agent.rs"

[[example]]
name = "multi_extract"
path = "examples/multi_extract.rs"

[[example]]
name = "multi_turn_agent"
path = "examples/multi_turn_agent.rs"

[[example]]
name = "ollama_streaming"
path = "examples/ollama_streaming.rs"

[[example]]
name = "ollama_streaming_with_tools"
path = "examples/ollama_streaming_with_tools.rs"

[[example]]
name = "openai_audio_generation"
path = "examples/openai_audio_generation.rs"
required-features = ["audio"]

[[example]]
name = "openai_image_generation"
path = "examples/openai_image_generation.rs"

[[example]]
name = "openai_streaming"
path = "examples/openai_streaming.rs"

[[example]]
name = "openai_streaming_with_tools"
path = "examples/openai_streaming_with_tools.rs"

[[example]]
name = "openrouter_streaming_with_tools"
path = "examples/openrouter_streaming_with_tools.rs"

[[example]]
name = "pdf_agent"
path = "examples/pdf_agent.rs"
required-features = [
    "derive",
    "pdf",
]

[[example]]
name = "perplexity_agent"
path = "examples/perplexity_agent.rs"

[[example]]
name = "rag"
path = "examples/rag.rs"
required-features = ["derive"]

[[example]]
name = "rag_dynamic_tools"
path = "examples/rag_dynamic_tools.rs"

[[example]]
name = "rag_dynamic_tools_multi_turn"
path = "examples/rag_dynamic_tools_multi_turn.rs"

[[example]]
name = "rag_ollama"
path = "examples/rag_ollama.rs"
required-features = ["derive"]

[[example]]
name = "reasoning_loop"
path = "examples/reasoning_loop.rs"

[[example]]
name = "sentiment_classifier"
path = "examples/sentiment_classifier.rs"

[[example]]
name = "simple_model"
path = "examples/simple_model.rs"

[[example]]
name = "together_embeddings"
path = "examples/together_embeddings.rs"
required-features = ["derive"]

[[example]]
name = "together_streaming"
path = "examples/together_streaming.rs"

[[example]]
name = "together_streaming_with_tools"
path = "examples/together_streaming_with_tools.rs"

[[example]]
name = "transcription"
path = "examples/transcription.rs"

[[example]]
name = "vector_search"
path = "examples/vector_search.rs"
required-features = ["derive"]

[[example]]
name = "vector_search_cohere"
path = "examples/vector_search_cohere.rs"
required-features = ["derive"]

[[example]]
name = "vector_search_ollama"
path = "examples/vector_search_ollama.rs"

[[example]]
name = "xai_embeddings"
path = "examples/xai_embeddings.rs"
required-features = ["derive"]

[[example]]
name = "xai_streaming"
path = "examples/xai_streaming.rs"

[[test]]
name = "embed_macro"
path = "tests/embed_macro.rs"
required-features = ["derive"]

[dependencies]
async-stream = "0.3.6"
bytes = "1.9.0"
futures = "0.3.29"
glob = "0.3.1"
ordered-float = "4.2.0"
schemars = "0.8.16"
serde_json = "1.0.108"
thiserror = "1.0.61"
tracing = "0.1.40"

[dependencies.base64]
version = "0.22.1"

[dependencies.epub]
version = "2.1.2"
optional = true

[dependencies.lopdf]
version = "0.35.0"
optional = true

[dependencies.mcp-core]
version = "0.1.50"
optional = true

[dependencies.mime_guess]
version = "2.0.5"

[dependencies.quick-xml]
version = "0.37.2"
optional = true

[dependencies.rayon]
version = "1.10.0"
optional = true

[dependencies.reqwest]
version = "0.12.12"
features = [
    "json",
    "stream",
    "multipart",
]
default-features = false

[dependencies.rig-derive]
version = "0.1.2"
path = "./rig-core-derive"
optional = true

[dependencies.serde]
version = "1.0.193"
features = ["derive"]

[dependencies.worker]
version = "0.5"
optional = true

[dev-dependencies]
anyhow = "1.0.75"
assert_fs = "1.1.2"
base64 = "0.22.1"
serde_path_to_error = "0.1.16"
tokio-test = "0.4.4"
tracing-subscriber = "0.3.18"

[dev-dependencies.mcp-core]
version = "0.1.50"
features = ["sse"]

[dev-dependencies.mcp-core-macros]
version = "0.1.30"

[dev-dependencies.tokio]
version = "1.34.0"
features = ["full"]
